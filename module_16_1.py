# Домашнее задание по теме "Основы Fast Api и маршрутизация"
# Цель: научиться создавать базовую маршрутизацию для обработки данных в FastAPI.
#
# Задача "Начало пути":
# Подготовка:
# Установите фреймворк FastAPI при помощи пакетного менеджера pip. Версию Python можете выбрать самостоятельно (3.9 - 3.12).
#
# Маршрутизация:
#
#     Создайте приложение(объект) FastAPI предварительно импортировав класс для него.
#
# 2.Создайте маршрут к главной странице - "/". По нему должно выводиться сообщение "Главная страница".
# 3.Создайте маршрут к странице администратора - "/user/admin". По нему должно выводиться сообщение "Вы вошли как администратор".
# 4.Создайте маршрут к страницам пользователей используя параметр в пути - "/user/{user_id}". По нему должно выводиться сообщение "Вы вошли как пользователь № <user_id>".
# 5.Создайте маршрут к страницам пользователей передавая данные в адресной строке - "/user". По нему должно выводиться сообщение "Информация о пользователе. Имя: <username>, Возраст: <age>".
# Пример получившегося интерфейса Swagger:
#
#
# Примечания:
#
#     Все маршруты пишутся при мощи GET запроса.
#     Помните о важности порядка записи запросов в вашем файле.
#     Названия функций можете придумать самостоятельно с учётом логики прописанной в них.

from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()

@app.get("/")
async def get_main_page()->str:
    """
    Get Main Page
    :return: string
    """
    return "Главная страница"

@app.get("/user/admin")
async def get_admin_page()->str:
    return "Вы вошли как администратор"

@app.get("/user/{user_id}")
async def get_user_number(user_id: int) -> str:
    return f"Вы вошли как пользователь № {user_id}"

@app.get("/user")
async def get_user_info(username: str, age: int) -> str:
    return f"Информация о пользователе. Имя: {username}, Возраст: {age}"





